package com.inev1te.study.designpattern.behavioral.vistor;

/**
 * 访问者模式：适用于结构相对稳定，想要新增方法的场景（访问者基于被访问者新增方法的时候）。
 * 该方法分为三个部分，访问者，被访问者，整体结构
 * 访问者通过分派方式，自定义实现访问被访问者方法
 * 被访问者抽象接收方法（一般是调用访问者的访问方法）
 * 整体结构定义对象组成，供client调用的遍历访问各个被访问者的接收方法，以及真正需要被client调用的方法
 * 分派：根据对象的类型而对方法进行的选择，就是分派(Dispatch)
 * 静态分派：根据方法所属类的类型，进行分派
 * 动态分派：根据方法参数，进行分派
 * 宗量：一个方法所属的对象叫做方法的接收者，方法的接收者与方法的参数统称做方法的宗量
 * 双重分派：一个方法根据两个宗量的类型来决定执行不同的代码，这就是“双重分派”
 * 最终结果为访问者和被访问者各自子类的笛卡尔积（各自完成对方的分派）
 */
public class VisitorTest {
}
